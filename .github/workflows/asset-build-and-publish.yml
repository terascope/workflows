# NOTE: There are no tests in this publish workflow, which means it assumes that
# the master branch has been tested.  The test-asset.yml should include:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
# which is meant to test on PRs to master and and push to master.

name: Build and Publish Teraslice Asset
run-name: ${{ github.actor }} is building and publishing the Teraslice Asset
on:
  workflow_call:

jobs:
  asset-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # NOTE: Hard Coded Node Version array, should match array in test-asset.yml
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn setup
      - run: yarn build
      - name: Ensure jq is installed
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Locate and Add Resolution to Global Package.json
        run: |
          GLOBAL_PACKAGE_DIR=$(yarn global dir)
          mkdir -p "$GLOBAL_PACKAGE_DIR"
          echo "export PATH=$(yarn global bin):\$PATH" >> $GITHUB_ENV
          yarn global add dummy-package
          PACKAGE_JSON="$GLOBAL_PACKAGE_DIR/package.json"
          echo "Updating $PACKAGE_JSON"
          jq '.resolutions["point-in-polygon-hao"] = "1.1.0"' $PACKAGE_JSON > /tmp/pkg.json && mv /tmp/pkg.json $PACKAGE_JSON
          cat $PACKAGE_JSON
      - run: yarn global add teraslice-cli
      - run: teraslice-cli -v
      - run: teraslice-cli assets build
      - run: ls -l ./build/
      - run: sha256sum ./build/*
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: teraslice-asset-${{ matrix.node-version }}
          path: ./build

  # Asset Upload and NPM Publish should be done only after builds from all Node
  # versions have completed.
  asset-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: asset-build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          # NOTE: Hard Coded Node Version
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn setup
      - run: ./scripts/publish.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Download assets from Teraslice Asset Build
        uses: actions/download-artifact@v4
        with:
          path: ./build/
          pattern: teraslice-asset-*
          merge-multiple: true
      - run: ls -l ./build/
      - name: Upload Assets to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/*.zip
